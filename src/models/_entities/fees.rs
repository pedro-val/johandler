//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "fees")]
pub struct Model {
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub pid: Uuid,
    pub fee: String,
    pub r#type: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::order_fees::Entity")]
    OrderFees,
    #[sea_orm(has_many = "super::processes_fees::Entity")]
    ProcessesFees,
}

impl Related<super::order_fees::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OrderFees.def()
    }
}

impl Related<super::processes_fees::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProcessesFees.def()
    }
}
